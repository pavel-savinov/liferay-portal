/**
 * Copyright (c) 2000-present Liferay, Inc. All rights reserved.
 *
 * This library is free software; you can redistribute it and/or modify it under
 * the terms of the GNU Lesser General Public License as published by the Free
 * Software Foundation; either version 2.1 of the License, or (at your option)
 * any later version.
 *
 * This library is distributed in the hope that it will be useful, but WITHOUT
 * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
 * FOR A PARTICULAR PURPOSE. See the GNU Lesser General Public License for more
 * details.
 */

package com.liferay.asset.list.model.impl;

import aQute.bnd.annotation.ProviderType;

import com.liferay.asset.list.model.AssetListEntryLocalization;
import com.liferay.asset.list.model.AssetListEntryLocalizationModel;

import com.liferay.expando.kernel.model.ExpandoBridge;
import com.liferay.expando.kernel.util.ExpandoBridgeFactoryUtil;

import com.liferay.petra.string.StringBundler;

import com.liferay.portal.kernel.bean.AutoEscapeBeanHandler;
import com.liferay.portal.kernel.model.CacheModel;
import com.liferay.portal.kernel.model.ModelWrapper;
import com.liferay.portal.kernel.model.impl.BaseModelImpl;
import com.liferay.portal.kernel.service.ServiceContext;
import com.liferay.portal.kernel.util.GetterUtil;
import com.liferay.portal.kernel.util.ProxyUtil;

import java.io.Serializable;

import java.sql.Types;

import java.util.HashMap;
import java.util.Map;

/**
 * The base model implementation for the AssetListEntryLocalization service. Represents a row in the &quot;AssetListEntryLocalization&quot; database table, with each column mapped to a property of this class.
 *
 * <p>
 * This implementation and its corresponding interface {@link AssetListEntryLocalizationModel} exist only as a container for the default property accessors generated by ServiceBuilder. Helper methods and all application logic should be put in {@link AssetListEntryLocalizationImpl}.
 * </p>
 *
 * @author Brian Wing Shun Chan
 * @see AssetListEntryLocalizationImpl
 * @see AssetListEntryLocalization
 * @see AssetListEntryLocalizationModel
 * @generated
 */
@ProviderType
public class AssetListEntryLocalizationModelImpl extends BaseModelImpl<AssetListEntryLocalization>
	implements AssetListEntryLocalizationModel {
	/*
	 * NOTE FOR DEVELOPERS:
	 *
	 * Never modify or reference this class directly. All methods that expect a asset list entry localization model instance should use the {@link AssetListEntryLocalization} interface instead.
	 */
	public static final String TABLE_NAME = "AssetListEntryLocalization";
	public static final Object[][] TABLE_COLUMNS = {
			{ "mvccVersion", Types.BIGINT },
			{ "assetListEntryLocalizationId", Types.BIGINT },
			{ "companyId", Types.BIGINT },
			{ "assetListEntryId", Types.BIGINT },
			{ "languageId", Types.VARCHAR },
			{ "title", Types.VARCHAR },
			{ "description", Types.VARCHAR },
			{ "groupId", Types.BIGINT }
		};
	public static final Map<String, Integer> TABLE_COLUMNS_MAP = new HashMap<String, Integer>();

	static {
		TABLE_COLUMNS_MAP.put("mvccVersion", Types.BIGINT);
		TABLE_COLUMNS_MAP.put("assetListEntryLocalizationId", Types.BIGINT);
		TABLE_COLUMNS_MAP.put("companyId", Types.BIGINT);
		TABLE_COLUMNS_MAP.put("assetListEntryId", Types.BIGINT);
		TABLE_COLUMNS_MAP.put("languageId", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("title", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("description", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("groupId", Types.BIGINT);
	}

	public static final String TABLE_SQL_CREATE = "create table AssetListEntryLocalization (mvccVersion LONG default 0 not null,assetListEntryLocalizationId LONG not null primary key,companyId LONG,assetListEntryId LONG,languageId VARCHAR(75) null,title VARCHAR(75) null,description VARCHAR(75) null,groupId LONG)";
	public static final String TABLE_SQL_DROP = "drop table AssetListEntryLocalization";
	public static final String ORDER_BY_JPQL = " ORDER BY assetListEntryLocalization.assetListEntryLocalizationId ASC";
	public static final String ORDER_BY_SQL = " ORDER BY AssetListEntryLocalization.assetListEntryLocalizationId ASC";
	public static final String DATA_SOURCE = "liferayDataSource";
	public static final String SESSION_FACTORY = "liferaySessionFactory";
	public static final String TX_MANAGER = "liferayTransactionManager";
	public static final boolean ENTITY_CACHE_ENABLED = GetterUtil.getBoolean(com.liferay.asset.list.service.util.ServiceProps.get(
				"value.object.entity.cache.enabled.com.liferay.asset.list.model.AssetListEntryLocalization"),
			true);
	public static final boolean FINDER_CACHE_ENABLED = GetterUtil.getBoolean(com.liferay.asset.list.service.util.ServiceProps.get(
				"value.object.finder.cache.enabled.com.liferay.asset.list.model.AssetListEntryLocalization"),
			true);
	public static final boolean COLUMN_BITMASK_ENABLED = GetterUtil.getBoolean(com.liferay.asset.list.service.util.ServiceProps.get(
				"value.object.column.bitmask.enabled.com.liferay.asset.list.model.AssetListEntryLocalization"),
			true);
	public static final long ASSETLISTENTRYID_COLUMN_BITMASK = 1L;
	public static final long GROUPID_COLUMN_BITMASK = 2L;
	public static final long LANGUAGEID_COLUMN_BITMASK = 4L;
	public static final long TITLE_COLUMN_BITMASK = 8L;
	public static final long ASSETLISTENTRYLOCALIZATIONID_COLUMN_BITMASK = 16L;
	public static final long LOCK_EXPIRATION_TIME = GetterUtil.getLong(com.liferay.asset.list.service.util.ServiceProps.get(
				"lock.expiration.time.com.liferay.asset.list.model.AssetListEntryLocalization"));

	public AssetListEntryLocalizationModelImpl() {
	}

	@Override
	public long getPrimaryKey() {
		return _assetListEntryLocalizationId;
	}

	@Override
	public void setPrimaryKey(long primaryKey) {
		setAssetListEntryLocalizationId(primaryKey);
	}

	@Override
	public Serializable getPrimaryKeyObj() {
		return _assetListEntryLocalizationId;
	}

	@Override
	public void setPrimaryKeyObj(Serializable primaryKeyObj) {
		setPrimaryKey(((Long)primaryKeyObj).longValue());
	}

	@Override
	public Class<?> getModelClass() {
		return AssetListEntryLocalization.class;
	}

	@Override
	public String getModelClassName() {
		return AssetListEntryLocalization.class.getName();
	}

	@Override
	public Map<String, Object> getModelAttributes() {
		Map<String, Object> attributes = new HashMap<String, Object>();

		attributes.put("mvccVersion", getMvccVersion());
		attributes.put("assetListEntryLocalizationId",
			getAssetListEntryLocalizationId());
		attributes.put("companyId", getCompanyId());
		attributes.put("assetListEntryId", getAssetListEntryId());
		attributes.put("languageId", getLanguageId());
		attributes.put("title", getTitle());
		attributes.put("description", getDescription());
		attributes.put("groupId", getGroupId());

		attributes.put("entityCacheEnabled", isEntityCacheEnabled());
		attributes.put("finderCacheEnabled", isFinderCacheEnabled());

		return attributes;
	}

	@Override
	public void setModelAttributes(Map<String, Object> attributes) {
		Long mvccVersion = (Long)attributes.get("mvccVersion");

		if (mvccVersion != null) {
			setMvccVersion(mvccVersion);
		}

		Long assetListEntryLocalizationId = (Long)attributes.get(
				"assetListEntryLocalizationId");

		if (assetListEntryLocalizationId != null) {
			setAssetListEntryLocalizationId(assetListEntryLocalizationId);
		}

		Long companyId = (Long)attributes.get("companyId");

		if (companyId != null) {
			setCompanyId(companyId);
		}

		Long assetListEntryId = (Long)attributes.get("assetListEntryId");

		if (assetListEntryId != null) {
			setAssetListEntryId(assetListEntryId);
		}

		String languageId = (String)attributes.get("languageId");

		if (languageId != null) {
			setLanguageId(languageId);
		}

		String title = (String)attributes.get("title");

		if (title != null) {
			setTitle(title);
		}

		String description = (String)attributes.get("description");

		if (description != null) {
			setDescription(description);
		}

		Long groupId = (Long)attributes.get("groupId");

		if (groupId != null) {
			setGroupId(groupId);
		}
	}

	@Override
	public long getMvccVersion() {
		return _mvccVersion;
	}

	@Override
	public void setMvccVersion(long mvccVersion) {
		_mvccVersion = mvccVersion;
	}

	@Override
	public long getAssetListEntryLocalizationId() {
		return _assetListEntryLocalizationId;
	}

	@Override
	public void setAssetListEntryLocalizationId(
		long assetListEntryLocalizationId) {
		_assetListEntryLocalizationId = assetListEntryLocalizationId;
	}

	@Override
	public long getCompanyId() {
		return _companyId;
	}

	@Override
	public void setCompanyId(long companyId) {
		_companyId = companyId;
	}

	@Override
	public long getAssetListEntryId() {
		return _assetListEntryId;
	}

	@Override
	public void setAssetListEntryId(long assetListEntryId) {
		_columnBitmask |= ASSETLISTENTRYID_COLUMN_BITMASK;

		if (!_setOriginalAssetListEntryId) {
			_setOriginalAssetListEntryId = true;

			_originalAssetListEntryId = _assetListEntryId;
		}

		_assetListEntryId = assetListEntryId;
	}

	public long getOriginalAssetListEntryId() {
		return _originalAssetListEntryId;
	}

	@Override
	public String getLanguageId() {
		if (_languageId == null) {
			return "";
		}
		else {
			return _languageId;
		}
	}

	@Override
	public void setLanguageId(String languageId) {
		_columnBitmask |= LANGUAGEID_COLUMN_BITMASK;

		if (_originalLanguageId == null) {
			_originalLanguageId = _languageId;
		}

		_languageId = languageId;
	}

	public String getOriginalLanguageId() {
		return GetterUtil.getString(_originalLanguageId);
	}

	@Override
	public String getTitle() {
		if (_title == null) {
			return "";
		}
		else {
			return _title;
		}
	}

	@Override
	public void setTitle(String title) {
		_columnBitmask |= TITLE_COLUMN_BITMASK;

		if (_originalTitle == null) {
			_originalTitle = _title;
		}

		_title = title;
	}

	public String getOriginalTitle() {
		return GetterUtil.getString(_originalTitle);
	}

	@Override
	public String getDescription() {
		if (_description == null) {
			return "";
		}
		else {
			return _description;
		}
	}

	@Override
	public void setDescription(String description) {
		_description = description;
	}

	@Override
	public long getGroupId() {
		return _groupId;
	}

	@Override
	public void setGroupId(long groupId) {
		_columnBitmask |= GROUPID_COLUMN_BITMASK;

		if (!_setOriginalGroupId) {
			_setOriginalGroupId = true;

			_originalGroupId = _groupId;
		}

		_groupId = groupId;
	}

	public long getOriginalGroupId() {
		return _originalGroupId;
	}

	public long getColumnBitmask() {
		return _columnBitmask;
	}

	@Override
	public ExpandoBridge getExpandoBridge() {
		return ExpandoBridgeFactoryUtil.getExpandoBridge(getCompanyId(),
			AssetListEntryLocalization.class.getName(), getPrimaryKey());
	}

	@Override
	public void setExpandoBridgeAttributes(ServiceContext serviceContext) {
		ExpandoBridge expandoBridge = getExpandoBridge();

		expandoBridge.setAttributes(serviceContext);
	}

	@Override
	public AssetListEntryLocalization toEscapedModel() {
		if (_escapedModel == null) {
			_escapedModel = (AssetListEntryLocalization)ProxyUtil.newProxyInstance(_classLoader,
					_escapedModelInterfaces, new AutoEscapeBeanHandler(this));
		}

		return _escapedModel;
	}

	@Override
	public Object clone() {
		AssetListEntryLocalizationImpl assetListEntryLocalizationImpl = new AssetListEntryLocalizationImpl();

		assetListEntryLocalizationImpl.setMvccVersion(getMvccVersion());
		assetListEntryLocalizationImpl.setAssetListEntryLocalizationId(getAssetListEntryLocalizationId());
		assetListEntryLocalizationImpl.setCompanyId(getCompanyId());
		assetListEntryLocalizationImpl.setAssetListEntryId(getAssetListEntryId());
		assetListEntryLocalizationImpl.setLanguageId(getLanguageId());
		assetListEntryLocalizationImpl.setTitle(getTitle());
		assetListEntryLocalizationImpl.setDescription(getDescription());
		assetListEntryLocalizationImpl.setGroupId(getGroupId());

		assetListEntryLocalizationImpl.resetOriginalValues();

		return assetListEntryLocalizationImpl;
	}

	@Override
	public int compareTo(AssetListEntryLocalization assetListEntryLocalization) {
		long primaryKey = assetListEntryLocalization.getPrimaryKey();

		if (getPrimaryKey() < primaryKey) {
			return -1;
		}
		else if (getPrimaryKey() > primaryKey) {
			return 1;
		}
		else {
			return 0;
		}
	}

	@Override
	public boolean equals(Object obj) {
		if (this == obj) {
			return true;
		}

		if (!(obj instanceof AssetListEntryLocalization)) {
			return false;
		}

		AssetListEntryLocalization assetListEntryLocalization = (AssetListEntryLocalization)obj;

		long primaryKey = assetListEntryLocalization.getPrimaryKey();

		if (getPrimaryKey() == primaryKey) {
			return true;
		}
		else {
			return false;
		}
	}

	@Override
	public int hashCode() {
		return (int)getPrimaryKey();
	}

	@Override
	public boolean isEntityCacheEnabled() {
		return ENTITY_CACHE_ENABLED;
	}

	@Override
	public boolean isFinderCacheEnabled() {
		return FINDER_CACHE_ENABLED;
	}

	@Override
	public void resetOriginalValues() {
		AssetListEntryLocalizationModelImpl assetListEntryLocalizationModelImpl = this;

		assetListEntryLocalizationModelImpl._originalAssetListEntryId = assetListEntryLocalizationModelImpl._assetListEntryId;

		assetListEntryLocalizationModelImpl._setOriginalAssetListEntryId = false;

		assetListEntryLocalizationModelImpl._originalLanguageId = assetListEntryLocalizationModelImpl._languageId;

		assetListEntryLocalizationModelImpl._originalTitle = assetListEntryLocalizationModelImpl._title;

		assetListEntryLocalizationModelImpl._originalGroupId = assetListEntryLocalizationModelImpl._groupId;

		assetListEntryLocalizationModelImpl._setOriginalGroupId = false;

		assetListEntryLocalizationModelImpl._columnBitmask = 0;
	}

	@Override
	public CacheModel<AssetListEntryLocalization> toCacheModel() {
		AssetListEntryLocalizationCacheModel assetListEntryLocalizationCacheModel =
			new AssetListEntryLocalizationCacheModel();

		assetListEntryLocalizationCacheModel.mvccVersion = getMvccVersion();

		assetListEntryLocalizationCacheModel.assetListEntryLocalizationId = getAssetListEntryLocalizationId();

		assetListEntryLocalizationCacheModel.companyId = getCompanyId();

		assetListEntryLocalizationCacheModel.assetListEntryId = getAssetListEntryId();

		assetListEntryLocalizationCacheModel.languageId = getLanguageId();

		String languageId = assetListEntryLocalizationCacheModel.languageId;

		if ((languageId != null) && (languageId.length() == 0)) {
			assetListEntryLocalizationCacheModel.languageId = null;
		}

		assetListEntryLocalizationCacheModel.title = getTitle();

		String title = assetListEntryLocalizationCacheModel.title;

		if ((title != null) && (title.length() == 0)) {
			assetListEntryLocalizationCacheModel.title = null;
		}

		assetListEntryLocalizationCacheModel.description = getDescription();

		String description = assetListEntryLocalizationCacheModel.description;

		if ((description != null) && (description.length() == 0)) {
			assetListEntryLocalizationCacheModel.description = null;
		}

		assetListEntryLocalizationCacheModel.groupId = getGroupId();

		return assetListEntryLocalizationCacheModel;
	}

	@Override
	public String toString() {
		StringBundler sb = new StringBundler(17);

		sb.append("{mvccVersion=");
		sb.append(getMvccVersion());
		sb.append(", assetListEntryLocalizationId=");
		sb.append(getAssetListEntryLocalizationId());
		sb.append(", companyId=");
		sb.append(getCompanyId());
		sb.append(", assetListEntryId=");
		sb.append(getAssetListEntryId());
		sb.append(", languageId=");
		sb.append(getLanguageId());
		sb.append(", title=");
		sb.append(getTitle());
		sb.append(", description=");
		sb.append(getDescription());
		sb.append(", groupId=");
		sb.append(getGroupId());
		sb.append("}");

		return sb.toString();
	}

	@Override
	public String toXmlString() {
		StringBundler sb = new StringBundler(28);

		sb.append("<model><model-name>");
		sb.append("com.liferay.asset.list.model.AssetListEntryLocalization");
		sb.append("</model-name>");

		sb.append(
			"<column><column-name>mvccVersion</column-name><column-value><![CDATA[");
		sb.append(getMvccVersion());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>assetListEntryLocalizationId</column-name><column-value><![CDATA[");
		sb.append(getAssetListEntryLocalizationId());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>companyId</column-name><column-value><![CDATA[");
		sb.append(getCompanyId());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>assetListEntryId</column-name><column-value><![CDATA[");
		sb.append(getAssetListEntryId());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>languageId</column-name><column-value><![CDATA[");
		sb.append(getLanguageId());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>title</column-name><column-value><![CDATA[");
		sb.append(getTitle());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>description</column-name><column-value><![CDATA[");
		sb.append(getDescription());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>groupId</column-name><column-value><![CDATA[");
		sb.append(getGroupId());
		sb.append("]]></column-value></column>");

		sb.append("</model>");

		return sb.toString();
	}

	private static final ClassLoader _classLoader = AssetListEntryLocalization.class.getClassLoader();
	private static final Class<?>[] _escapedModelInterfaces = new Class[] {
			AssetListEntryLocalization.class, ModelWrapper.class
		};
	private long _mvccVersion;
	private long _assetListEntryLocalizationId;
	private long _companyId;
	private long _assetListEntryId;
	private long _originalAssetListEntryId;
	private boolean _setOriginalAssetListEntryId;
	private String _languageId;
	private String _originalLanguageId;
	private String _title;
	private String _originalTitle;
	private String _description;
	private long _groupId;
	private long _originalGroupId;
	private boolean _setOriginalGroupId;
	private long _columnBitmask;
	private AssetListEntryLocalization _escapedModel;
}
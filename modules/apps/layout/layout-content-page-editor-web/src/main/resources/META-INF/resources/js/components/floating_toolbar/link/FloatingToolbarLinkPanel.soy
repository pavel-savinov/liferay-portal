{namespace com.liferay.layout.content.page.editor.web.FloatingToolbarLinkPanel}

/**
 * FloatingToolbarLinkPanel
 */
{template .render}
	{@param item: [
		editableValues: [
			config: [
				buttonType: string,
				href: string,
			title: string,
			target: string,
			type: string
			]
		]
	]}
	{@param? _handleAssetBrowserLinkClick: any}
	{@param? _handleAssetEntryLinkClick: any}
	{@param? _handleInputHrefKeyUp: any}
	{@param? _handleTargetOptionChange: any}
	{@param? _handleTypeOptionChange: any}
	{@param? _handleSourceTypeChange: any}
	{@param? _handleSubmit: any}
	{@param? _selectedSourceTypeId: string}
	{@param? _sourceTypeIds: [
	content: string,
	structure: string
	]}
	{@param? _sourceTypes: list<[
	id: string,
	label: string
	]>}
	{@param? _targetTypes: ?}
	{@param? assetBrowserLinks: list<[
	href: string,
	typeName: string
	]>}
	{@param? mappedAssetEntries: list<[
	encodedId: string,
	classNameId: string,
	classPK: string,
	title: string
	]>}
	{@param? mappingFieldsURL: string}
	{@param? spritemap: string}

	{let $linkType kind="text"}
		{if $item.editableValues.config and $item.editableValues.config.type}
			{$item.editableValues.config.type}
		{else}
			manual
		{/if}
	{/let}

	<div class="floating-toolbar-link-panel p-3">
		<form data-onsubmit="{$_handleSubmit}">
			<div class="form-group">
				<label for="floatingToolbarLinkTypePanelOption">
					{msg desc=""}link{/msg}
				</label>

				<select
						class="form-control form-control-sm"
						data-onchange="{$_handleTypeOptionChange}"
						id="floatingToolbarLinkTypePanelOption"
				>
					<option value="manual"
							{if $linkType == 'manual'}selected{/if}>{msg desc=""}
						manual{/msg}</option>
					<option value="mapped"
							{if $linkType == 'mapped'}selected{/if}>{msg desc=""}
						from-content-field{/msg}</option>
				</select>
			</div>

			{if $linkType == 'manual'}
				<div class="form-group">
					<label for="floatingToolbarLinkHrefPanelOption">
						{msg desc=""}URL{/msg}
					</label>

					<input
							class="form-control form-control-sm"
							data-onkeyup="{$_handleInputHrefKeyUp}"
							id="floatingToolbarLinkHrefPanelOption"
							title="{$item.editableValues.config ? $item.editableValues.config.href : ''}"
							type="text"
							value="{$item.editableValues.config ? $item.editableValues.config.href : ''}"
					>
				</div>
			{else}
				{call .linkMapping}
					{param assetBrowserLinks: $assetBrowserLinks /}
					{param handleAssetBrowserLinkClick: $_handleAssetBrowserLinkClick /}
					{param handleAssetEntryLinkClick: $_handleAssetEntryLinkClick /}
					{param handleSourceTypeChange: $_handleSourceTypeChange /}
					{param mappedAssetEntries: $mappedAssetEntries /}
					{param mappingFieldsURL: $mappingFieldsURL /}
					{param sourceTypeIds: $_sourceTypeIds /}
					{param sourceTypes: $_sourceTypes /}
					{param selectedAssetEntryTitle: $item.editableValues.config ? $item.editableValues.config.title : '' /}
					{param selectedSourceTypeId: $_selectedSourceTypeId /}
					{param spritemap: $spritemap /}
				{/call}
			{/if}

			{if $_targetTypes}
				<div class="form-group">
					<label for="floatingToolbarLinkTargetPanelOption">
						{msg desc=""}target{/msg}
					</label>

					<select
						class="form-control form-control-sm"
						data-onchange="{$_handleTargetOptionChange}"
						id="floatingToolbarLinkTargetPanelOption"
					>
						{foreach $targetType in $_targetTypes}
							{call .targetTypeOption}
								{param item: $item /}
								{param targetType: $targetType /}
							{/call}
						{/foreach}
					</select>
				</div>
			{/if}
		</form>
	</div>
{/template}

{template .linkMapping}
	{@param? assetBrowserLinks: list<[
	href: string,
	typeName: string
	]>}
	{@param? mappedAssetEntries: list<[
	encodedId: string,
	classNameId: string,
	classPK: string,
	title: string
	]>}
	{@param? handleAssetBrowserLinkClick: any}
	{@param? handleAssetEntryLinkClick: any}
	{@param? handleSourceTypeChange: any}
	{@param? mappingFieldsURL: string}
	{@param? selectedAssetEntryTitle: string}
	{@param? selectedSourceTypeId: string}
	{@param? sourceTypeIds: [
	content: string,
	structure: string
	]}
	{@param? sourceTypes: list<[
	id: string,
	label: string
	]>}
	{@param? spritemap: string}

	{if $mappingFieldsURL}
		<div class="form-group">
			{call com.liferay.layout.content.page.editor.web.FloatingToolbarMappingPanel.sourceTypeSelect}
				{param handleSourceOptionChange: $handleSourceTypeChange /}
				{param sourceTypes: $sourceTypes /}
				{param selectedSourceTypeId: $selectedSourceTypeId /}
			{/call}
		</div>
	{/if}

	{if not $mappingFieldsURL or $selectedSourceTypeId == $sourceTypeIds.content}
		<div class="floating-toolbar-mapping-panel__asset-select form-group">
			{call com.liferay.layout.content.page.editor.web.FloatingToolbarMappingPanel.assetSelect}
				{param handleAssetBrowserLinkClick: $handleAssetBrowserLinkClick /}
				{param handleAssetEntryLinkClick: $handleAssetEntryLinkClick /}
				{param mappedAssetEntries: $mappedAssetEntries /}
				{param selectedAssetEntryTitle: $selectedAssetEntryTitle /}
				{param assetBrowserLinks: $assetBrowserLinks /}
				{param spritemap: $spritemap /}
			{/call}
		</div>
	{/if}
{/template}

/**
 * Link target option
 */
{template .targetTypeOption}
	{@param item: [
		editableValues: [
			config: [
				target: string
			]
		]
	]}
	{@param targetType: [
		targetTypeId: string,
		label: string
	]}

	{let $optionAttributes kind="attributes"}
		value="{$targetType.targetTypeId}"

		{if $item.editableValues.config and $item.editableValues.config.target and $item.editableValues.config.target == $targetType.targetTypeId}
			selected
		{/if}
	{/let}

	<option {$optionAttributes}>
		{$targetType.label}
	</option>
{/template}
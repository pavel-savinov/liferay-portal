{namespace com.liferay.layout.content.page.editor.web.FloatingToolbarMappingPanel}

/**
 * FloatingToolbarMappingPanel
 */
{template .render}
	{@param item: [
		editableValues: [
			encodedId: string,
			fieldId: string,
			mappedField: string
		]
	]}
	{@param? _fields: ?}
	{@param? _handleAssetOptionChange: any}
	{@param? _handleFieldOptionChange: any}
	{@param? _handleSourceTypeChange: any}
	{@param? _handleUnmapButtonClick: any}
	{@param? _selectedSourceTypeId: string}
	{@param? _sourceTypeIds: [
		content: string,
		structure: string
	]}
	{@param? _sourceTypes: list<[
		id: string,
		label: string
	]>}
	{@param? assetBrowserLinks: list<[
		href: string,
		typeName: string
	]>}
	{@param? mappingFieldsURL: string}
	{@param? spritemap: string}

	<div class="floating-toolbar-mapping-panel">
		{if $mappingFieldsURL}
			<div class="form-group">
				{call .sourceTypeSelect}
					{param handleSourceOptionChange: $_handleSourceTypeChange /}
					{param sourceTypes: $_sourceTypes /}
					{param selectedSourceTypeId: $_selectedSourceTypeId /}
				{/call}
			</div>
		{/if}

		{if not $mappingFieldsURL or $_selectedSourceTypeId == $_sourceTypeIds.content}
			<div class="form-group floating-toolbar-mapping-panel__asset-select">
				{call .assetSelect}
					{param handleAssetOptionChange: $_handleAssetOptionChange /}
					{param selectedAssetEntryEncodedId: $item.editableValues.encodedId /}
					{param assetBrowserLinks: $assetBrowserLinks /}
					{param spritemap: $spritemap /}
				{/call}
			</div>
		{/if}

		<div class="form-group">
			{call .fieldSelect}
				{param fields: $_fields /}
				{param handleFieldOptionChange: $_handleFieldOptionChange /}
				{param mappedFieldId: $item.editableValues.mappedField or $item.editableValues.fieldId /}
			{/call}
		</div>

		{call .unmapButton}
			{param handleUnmapButtonClick: $_handleUnmapButtonClick /}
		{/call}
	</div>
{/template}

/**
 * Asset select
 */
{template .assetSelect}
	{@param? assetBrowserLinks: list<[
		href: string,
		typeName: string
	]>}
	{@param? handleAssetOptionChange: any}
	{@param? selectedAssetEntryEncodedId: string}
	{@param? spritemap: string}

	<label for="floatingToolbarMappingPanelAssetSelect">
		{msg desc=""}content{/msg}
	</label>

	<div class="d-flex">
		<input
			class="form-control form-control-sm mr-2"
			disabled
			type="text"
			value="{$selectedAssetEntryEncodedId}"
		/>

		<div class="btn-group">
			<button
				aria-expanded="false"
				aria-haspopup="true"
				class="btn btn-monospaced btn-secondary btn-sm dropdown-toggle"
				data-toggle="dropdown"
				type="button"
			>
				<svg class="lexicon-icon">
					<use xlink:href="{$spritemap ?: ''}#plus"></use>
				</svg>
			</button>

			<div class="dropdown-menu">
				{if $assetBrowserLinks}
					{foreach $assetBrowserLink in $assetBrowserLinks}
						<button
							class="dropdown-item"
							data-onclick="{$handleAssetOptionChange}"
							data-asset-type-url="{$assetBrowserLink.href}"
							key="{$assetBrowserLink.href}"
							type="button"
						>
							{$assetBrowserLink.typeName}
						</button>
					{/foreach}
				{/if}
			</div>
		</div>
	</div>
{/template}

/**
 * Field select
 */
{template .fieldSelect}
	{@param? fields: ?}
	{@param? handleFieldOptionChange: any}
	{@param? mappedFieldId: ?}

	{let $fieldsDisabled kind="attributes"}
		{if $fields.length < 1}
			disabled
		{/if}
	{/let}

	<label for="floatingToolbarMappingPanelFieldSelect">
		{msg desc=""}field{/msg}
	</label>

	<select
		class="form-control form-control-sm"
		data-onchange="{$handleFieldOptionChange}"
		id="floatingToolbarMappingPanelFieldSelect"
		{$fieldsDisabled}
	>
		{call .selectOption}
			{param optionId: '' /}
			{param optionLabel: '-' /}
			{param selectedId: $mappedFieldId or '-' /}
		{/call}

		{foreach $field in $fields}
			{call .selectOption}
				{param optionId: $field.key /}
				{param optionLabel: $field.label /}
				{param key: $field.key /}
				{param selectedId: $mappedFieldId /}
			{/call}
		{/foreach}
	</select>
{/template}

/**
 * Select option
 */
{template .selectOption}
	{@param optionId: string}
	{@param optionLabel: string}
	{@param? selectedId: string}

	{let $optionAttributes kind="attributes"}
		value="{$optionId}"

		{if $optionId == $selectedId}
			selected
		{/if}
	{/let}

	<option {$optionAttributes}>
		{$optionLabel}
	</option>
{/template}

/**
 * Source select
 */
{template .sourceTypeSelect}
	{@param? handleSourceOptionChange: any}
	{@param? sourceTypes: ?}
	{@param? selectedSourceTypeId: string}

	<label for="floatingToolbarMappingPanelSourceTypeSelect">
		{msg desc=""}source{/msg}
	</label>

	<select
		class="form-control form-control-sm"
		data-onchange="{$handleSourceOptionChange}"
		id="floatingToolbarMappingPanelSourceTypeSelect"
	>
		{foreach $sourceType in $sourceTypes}
			{call .selectOption}
				{param optionId: $sourceType.id /}
				{param optionLabel: $sourceType.label /}
				{param key: $sourceType.id /}
				{param selectedId: $selectedSourceTypeId /}
			{/call}
		{/foreach}
	</select>
{/template}

/**
 * Unmap button
 */
{template .unmapButton}
	{@param? handleUnmapButtonClick: any}

	<button
		class="btn btn-secondary"
		data-onclick="{$handleUnmapButtonClick}"
	>
		{msg desc=""}unmap{/msg}
	</button>
{/template}
